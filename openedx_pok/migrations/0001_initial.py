# Generated by Django 4.2.20 on 2025-05-05 21:42

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone
import model_utils.fields


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ('course_overviews', '0029_alter_historicalcourseoverview_options'),
    ]

    operations = [
        migrations.CreateModel(
            name='PokCertificate',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', model_utils.fields.AutoCreatedField(default=django.utils.timezone.now, editable=False, verbose_name='created')),
                ('modified', model_utils.fields.AutoLastModifiedField(default=django.utils.timezone.now, editable=False, verbose_name='modified')),
                ('course_id', models.CharField(help_text='Course ID associated with the certificate', max_length=255)),
                ('pok_certificate_id', models.CharField(blank=True, help_text='Certificate ID in the Open edX platform', max_length=255, null=True)),
                ('state', models.CharField(blank=True, help_text="State of the POK certificate (e.g., 'emitted')", max_length=50, null=True)),
                ('view_url', models.URLField(blank=True, help_text='URL to view the POK certificate', max_length=255, null=True)),
                ('emission_date', models.DateTimeField(blank=True, help_text='Date when the certificate was emitted', null=True)),
                ('emission_type', models.CharField(blank=True, default='pok', help_text="Type of emission (e.g., 'pok')", max_length=50)),
                ('custom_parameters', models.JSONField(blank=True, help_text='Custom parameters associated with the certificate', null=True)),
                ('title', models.CharField(blank=True, help_text='Title of the POK certificate', max_length=255, null=True)),
                ('emitter', models.CharField(blank=True, help_text='Emitter of the POK certificate', max_length=255, null=True)),
                ('tags', models.JSONField(blank=True, default=list, help_text='Tags associated with the certificate', null=True)),
                ('receiver_email', models.EmailField(blank=True, help_text='Email of the certificate receiver', max_length=255, null=True)),
                ('receiver_name', models.CharField(blank=True, help_text='Name of the certificate receiver', max_length=255, null=True)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'unique_together': {('user_id', 'course_id')},
            },
        ),
        migrations.CreateModel(
            name='CertificateTemplate',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', model_utils.fields.AutoCreatedField(default=django.utils.timezone.now, editable=False, verbose_name='created')),
                ('modified', model_utils.fields.AutoLastModifiedField(default=django.utils.timezone.now, editable=False, verbose_name='modified')),
                ('template_id', models.CharField(help_text='Template ID associated with the course', max_length=250)),
                ('emission_type', models.CharField(blank=True, choices=[('pok', 'POK'), ('blockchain', 'Blockchain')], default='pok', help_text='Type of emission (blockchain or pok)', max_length=50, null=True)),
                ('course', models.ForeignKey(help_text='Course ID associated with the template', on_delete=django.db.models.deletion.CASCADE, to='course_overviews.courseoverview')),
            ],
            options={
                'abstract': False,
            },
        ),
    ]
